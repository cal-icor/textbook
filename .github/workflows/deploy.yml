name: deploy-book

on:
  push:
    branches:
      - main  # Ensure your repository allows deployment from 'main'

jobs:
  deploy-book:
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -V  # Debugging Python version
          pip install -r requirements.txt
          pip list  # Debugging installed packages

      - name: Cache executed notebooks
        uses: actions/cache@v3
        with:
          path: modules/_build/.jupyter_cache
          key: jupyter-book-cache-${{ hashFiles('requirements.txt') }}

      - name: Debug initial modules structure
        run: ls -alR modules || echo "Modules folder does not exist"

      # Clean up old build output to ensure a fresh build
      - name: Clean previous build
        run: rm -rf modules/_build/html || echo "No previous build to remove"

      - name: Build the book
        run: |
          set -e  # Exit on failure
          jupyter-book --version  # Debugging jupyter-book version
          jupyter-book build --all modules || { echo "Build failed"; exit 1; }

      - name: Debug build output
        run: ls -alR modules/_build || echo "Build directory does not exist"

      - name: Verify HTML output
        run: |
          if [ -d "modules/_build/html" ]; then
            echo "HTML output exists"
            ls -alR modules/_build/html
          else
            echo "HTML output is missing!"
            exit 1
          fi

      # **Check and Remove Symlinks (GitHub Pages Restriction)**
      - name: Check for symlinks
        run: |
          echo "Checking for symlinks..."
          find modules/_build/html -type l

      - name: Remove symlinks if found
        run: |
          find modules/_build/html -type l -exec rm {} \;

      # **Check Total Artifact Size**
      - name: Check artifact size
        run: du -sh modules/_build/html

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: "modules/_build/html"
          artifact_name: pages
          if-no-files-found: error  # Fail explicitly if no files are found

      - name: Check uploaded artifacts
        run: |
          echo "Listing artifacts in runner directory..."
          ls -alR /home/runner/work/_temp/_runner_file_commands || echo "Artifacts directory not found"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: artifact  # Ensure this matches the uploaded artifact name

      - name: List final structure before cleanup
        run: ls -alR modules/_build || echo "Build directory missing before cleanup"

      - name: Clean up build directory
        run: rm -rf modules/_build
